# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
    app.client_manager:
        class: AppBundle\Manager\ClientManager
        arguments: ["@doctrine.orm.entity_manager", 'ApiBundle\Entity\Client']
        public: true
    app.folder_manager:
        class: AppBundle\Manager\FolderManager
        arguments: [
          "@doctrine.orm.entity_manager",
          'AppBundle\Entity\Folder',
          "@event_dispatcher",
          "@security.token_storage",
          "@app.file_manager"
          ]
        public: true
    app.file_manager:
        class: AppBundle\Manager\FileManager
        arguments: ["@doctrine.orm.entity_manager", 'AppBundle\Entity\File', "@service_container"]
        public: true
    app.invitation_request_manager:
        class: AppBundle\Manager\InvitationRequestManager
        arguments: ["@doctrine.orm.entity_manager", 'AppBundle\Entity\InvitationRequest']
        public: true
    app.folder_user_manager:
        class: AppBundle\Manager\FolderUserManager
        arguments: ["@doctrine.orm.entity_manager", 'AppBundle\Entity\FolderUser']
        public: true
    app.file_user_manager:
        class: AppBundle\Manager\FileUserManager
        arguments: ["@doctrine.orm.entity_manager", 'AppBundle\Entity\FileUser']
        public: true
    app.news_manager:
        class: AppBundle\Manager\NewsManager
        arguments: ["@doctrine.orm.entity_manager", 'AppBundle\Entity\News']
        public: true

    app.mailer:
        class: AppBundle\Services\Mailer
        arguments: ['@service_container','@mailer']
        public: true

    app.folder_log_manager:
        class: AppBundle\Manager\FolderLogManager
        arguments: ["@doctrine.orm.entity_manager", 'AppBundle\Entity\FolderLog']
        public: true

    app.file_log_manager:
        class: AppBundle\Manager\FileLogManager
        arguments: ["@doctrine.orm.entity_manager", 'AppBundle\Entity\FileLog']
        public: true

    app.user_manager:
        class: AppBundle\Manager\UserManager
        arguments: ["@doctrine.orm.entity_manager", 'ApiBundle\Entity\User']
        public: true

    app.event.folder:
        class: AppBundle\EventListener\FolderListener
        arguments: ["@app.folder_log_manager", "@service_container"]
        tags:
            - { name: kernel.event_listener, event: folder.on.lock, method: onLockedFolder}
            - { name: kernel.event_listener, event: folder.on.unlock, method: onUnlockedFolder}
            - { name: kernel.event_listener, event: folder.on.creation, method: onCreateFolder}
            - { name: kernel.event_listener, event: folder.on.rename, method: onRenameFolder}
            - { name: kernel.event_listener, event: folder.on.delete, method: onDeleteFolder}
            - { name: kernel.event_listener, event: folder.on.change_owner, method: onChangeFolderOwner}
    app.event.file:
        class: AppBundle\EventListener\FileListener
        arguments: ["@app.file_log_manager", "@service_container"]
        tags:
            - { name: kernel.event_listener, event: file.on.delete, method: onDeleteFile}
            - { name: kernel.event_listener, event: file.on.change_owner, method: onChangeFileOwner}

    app.user_manager:
        class: ApiBundle\Manager\UserManager
        arguments: ["@doctrine.orm.entity_manager", 'ApiBundle\Entity\User']
        public: true

    app.peramlink:
        class: AppBundle\Services\Permalink
        public: true

